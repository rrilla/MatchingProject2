{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\project\\\\MatchingProject2\\\\MatchingPro\\\\src\\\\main\\\\webapp\\\\blog-app\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport { Route } from 'react-router-dom';\nimport Header from './components/Header';\nimport MainForm from './pages/MainForm';\nimport Team_create from './pages/team/Team_create';\nimport Team_detail from './pages/team/Team_detail';\nimport MyTeam from './pages/team/MyTeam';\nimport Background from './components/Background';\nimport Team_schedule from './pages/team/Team_schedule';\nimport Mypage from './pages/user/Mypage';\nimport LoginModal from './components/modal/LoginModal';\n/* import Footer from './components/Footer';\r\n */\n\nconst App = () => {\n  // 페이지가 로딩 되면 localStorage에서 token을 check해서 true or false를 return해준다\n  const tokenCheck = () => {\n    console.log(\"App.js:: display Authorization - 로그인 여부 확인을 위한 token check\", localStorage.getItem(\"Authorization\"));\n    if (localStorage.getItem(\"Authorization\") != null) return true;else return false;\n  };\n\n  const [loginId, setLoginId] = useState(0);\n\n  const setID = () => {\n    setLoginId(1);\n  }; // 토큰이 있다(1) or 없다(0) => 있다 = 로그인 o, 없다 = 로그인 x \n\n\n  const [isToken, setIsToken] = useState(tokenCheck()); // 로그인 하면 실행할거야. 0->1로 바꿔주는 함수. \n\n  const setToken = () => {\n    if (isToken) setIsToken(0); // 1이면 0으로 바꾸고\n    else setIsToken(1); // 0이면 1로 바꾸고\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    isToken: isToken,\n    setToken: setToken,\n    setIsToken: setIsToken,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Background, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    exact: true,\n    component: MainForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/Join\",\n    exact: true,\n    component: MainForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/Login\",\n    exact: true,\n    component: MainForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/Team_detail/:id\",\n    exact: true,\n    component: Team_detail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/Team_schedule/:id\",\n    exact: true,\n    component: Team_schedule,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/MyTeam\",\n    exact: true,\n    component: MyTeam,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MyTeam, {\n    loginId: loginId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 61\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/Mypage\",\n    exact: true,\n    component: Mypage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/admin/Desktop/project/MatchingProject2/MatchingPro/src/main/webapp/blog-app/src/App.js"],"names":["React","useState","Route","Header","MainForm","Team_create","Team_detail","MyTeam","Background","Team_schedule","Mypage","LoginModal","App","tokenCheck","console","log","localStorage","getItem","loginId","setLoginId","setID","isToken","setIsToken","setToken"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport Header from './components/Header';\r\nimport MainForm from './pages/MainForm';\r\nimport Team_create from './pages/team/Team_create';\r\nimport Team_detail from './pages/team/Team_detail';\r\nimport MyTeam from './pages/team/MyTeam';\r\nimport Background from './components/Background';\r\nimport Team_schedule from './pages/team/Team_schedule';\r\nimport Mypage from './pages/user/Mypage';\r\nimport LoginModal from './components/modal/LoginModal';\r\n/* import Footer from './components/Footer';\r\n */\r\nconst App = () => {\r\n  // 페이지가 로딩 되면 localStorage에서 token을 check해서 true or false를 return해준다\r\n  const tokenCheck = () => {\r\n    console.log(\"App.js:: display Authorization - 로그인 여부 확인을 위한 token check\", localStorage.getItem(\"Authorization\"));\r\n    if (localStorage.getItem(\"Authorization\") != null) return true;\r\n    else return false;\r\n  }\r\n\r\n  const [loginId, setLoginId] = useState(0);\r\n\r\n  const setID = () => {\r\n    setLoginId(1)\r\n  }\r\n\r\n  // 토큰이 있다(1) or 없다(0) => 있다 = 로그인 o, 없다 = 로그인 x \r\n  const [isToken, setIsToken] = useState(tokenCheck());\r\n\r\n  // 로그인 하면 실행할거야. 0->1로 바꿔주는 함수. \r\n  const setToken = () => {\r\n    if (isToken) setIsToken(0);  // 1이면 0으로 바꾸고\r\n    else setIsToken(1);         // 0이면 1로 바꾸고\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header isToken={isToken} setToken={setToken} setIsToken={setIsToken}></Header>\r\n      <Background></Background>\r\n\r\n      {/* 아래는 Router */}\r\n      <Route path=\"/\" exact={true} component={MainForm}></Route>\r\n      {/* 메인화면 */}\r\n\r\n      <Route path=\"/Join\" exact={true} component={MainForm}></Route>\r\n      <Route path=\"/Login\" exact={true} component={MainForm}></Route>\r\n      {/* <LoginModal setLoginId={() => setID()}></LoginModal> */}\r\n      {/* 로그인과 회원가입, 둘 다 모달로 처리 */}\r\n\r\n      <Route path=\"/Team_detail/:id\" exact={true} component={Team_detail}></Route>\r\n      <Route path=\"/Team_schedule/:id\" exact={true} component={Team_schedule}></Route>\r\n\r\n        {/* <Route path=\"/Team_create\" exact={true} component={MainForm}></Route> */}\r\n\r\n      <Route path=\"/MyTeam\" exact={true} component={MyTeam}><MyTeam loginId={loginId}></MyTeam></Route>\r\n      <Route path=\"/Mypage\" exact={true} component={Mypage}></Route>\r\n\r\n{/*       <Footer></Footer>\r\n */}\r\n      {/* path에 적은 주소로 요 이 들어오면 component를 return해준다 */}\r\n      {/* link to - /MyTeam -> component={MyTeam} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}